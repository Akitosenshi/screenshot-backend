pub mod api;

use api::user;
use rocket::{get, routes};
use tera::Tera;
use lazy_static::lazy_static;


lazy_static! {
	pub static ref TEMPLATES: Tera = {
		let mut tera = match Tera::new("templates/**/*.html") {
			Ok(t) => t,
			Err(e) => {
				println!("Parsing error(s): {}", e);
				::std::process::exit(1);
			}
		};
		tera
	};
}

#[get("/")]
fn index() -> &'static str {
	"Henlo, Wrold?"
}

#[get("/register")]
fn register() -> String {
	"".to_string()
}

#[rocket::main]
async fn main() -> Result<(), rocket::Error> {
	let _rocket = rocket::build()
		.mount("/", routes![index, register])
		.mount("/api/v1", routes![api_register])
		.launch()
		.await?;
	Ok(())
}
